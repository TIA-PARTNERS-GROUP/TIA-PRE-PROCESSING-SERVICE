services:
  # --- MariaDB Service ---
  mariadb:
    image: mariadb:10.11 # Pinned version for stability
    restart: always
    environment:
      MARIADB_ROOT_PASSWORD: devpasswordroot
      MARIADB_DATABASE: dev_tia_db
      MARIADB_USER: tia_dev_user
      MARIADB_PASSWORD: devpassword
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./db:/docker-entrypoint-initdb.d
    ports:
      - "3308:3306"
    command: 
      - '--log-bin'
      - '--binlog_format=ROW'
      - '--server-id=1'
    healthcheck:
      test: ["CMD-SHELL", "mariadb -u tia_dev_user -pdevpassword -e 'SHOW TABLES' dev_tia_db || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  # --- Memgraph Service ---
  memgraph:
    image: memgraph/memgraph-platform # Pinned version
    restart: always
    ports:
      - "7687:7687"
      - "3000:3000"
    volumes:
      - memgraph_data:/var/lib/memgraph
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "7687"]
      interval: 10s
      timeout: 5s
      retries: 10

  # --- Kafka Cluster ---
  zookeeper:
    image: bitnami/zookeeper:3.9 # Pinned version
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    healthcheck:
      test: ["CMD", "zkServer.sh", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: bitnami/kafka:3.7 # Pinned version
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 20

  # --- Debezium CDC Connector ---
  connect:
    image: debezium/connect:2.6 # Pinned version
    depends_on:
      kafka:
        condition: service_healthy
      mariadb:
        condition: service_healthy
    ports:
      - "8083:8083"
    environment:
      BOOTSTRAP_SERVERS: 'kafka:9092'
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: my_connect_configs
      OFFSET_STORAGE_TOPIC: my_connect_offsets
      STATUS_STORAGE_TOPIC: my_connect_statuses
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/"]
      interval: 10s
      timeout: 5s
      retries: 10

  # --- NEW: Debezium Connector Initializer ---
  init-debezium:
    image: curlimages/curl:8.9.0
    depends_on:
      connect:
        condition: service_healthy
    command: >
      /bin/sh -c "
        echo 'Waiting for Kafka Connect to be ready...'
        sleep 15
        echo 'Registering MariaDB connector...'
        curl -i -X POST \
          -H 'Accept:application/json' \
          -H 'Content-Type:application/json' \
          http://connect:8083/connectors/ \
          -d '{
                \"name\": \"tia-mariadb-connector\",
                \"config\": {
                  \"connector.class\": \"io.debezium.connector.mysql.MySqlConnector\",
                  \"tasks.max\": \"1\",
                  \"topic.prefix\": \"tia_server\",
                  \"database.hostname\": \"mariadb\",
                  \"database.port\": \"3306\",
                  \"database.user\": \"root\",
                  \"database.password\": \"devpasswordroot\",
                  \"database.server.id\": \"1\",
                  \"database.include.list\": \"dev_tia_db\",
                  \"schema.history.internal.kafka.bootstrap.servers\": \"kafka:9092\",
                  \"schema.history.internal.kafka.topic\": \"schema-changes.tia_db\"
                }
              }'
        echo 'Connector registered!'
      "

  # --- Application Service ---
  app:
    build: 
      context: ./app
      dockerfile: Dockerfile
    restart: always
    depends_on:
      mariadb:
        condition: service_healthy
      memgraph:
        condition: service_healthy
      # MODIFIED: App now waits for the initializer to complete
      init-debezium:
        condition: service_completed_successfully
    environment:
      - MG_HOST=memgraph
      - MG_PORT=7687
      - DB_HOST=mariadb
      - DB_PORT=3306
      - DB_USER=tia_dev_user
      - DB_PASSWORD=devpassword
      - DB_NAME=dev_tia_db

volumes:
  mariadb_data:
  memgraph_data:
